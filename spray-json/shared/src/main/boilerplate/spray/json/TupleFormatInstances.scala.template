/*
 * Copyright (C) 2011,2012 Mathias Doenitz, Johannes Rudolph
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package spray.json

trait TupleFormatInstances {
  [2..22#implicit def tuple2Format[[#T1: JsonFormat#]]: JsonFormat[Tuple1[[#T1#]]] = new JsonFormat[Tuple1[[#T1#]]] {
    def write(t: ([#T1#])) = JsArray([#t._1.toJson#])
    def read(value: JsValue) = value match {
      case JsArray(Seq([#t1#])) => Tuple1([#t1.convertTo[T1]#])
      case x                  => deserializationError("Expected Tuple1 as JsArray, but got " + x)
    }
  }#

  ]
}